name: Release

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      next_version: ${{ steps.increment_version.outputs.next_version }}
      tags: ${{ steps.extract_version.outputs.tags }}
      exist: ${{ steps.increment_version.outputs.exist }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        architecture: 'x64'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka
        
    - name: Download Dll
      run: |
        Invoke-RestMethod -Uri "https://drive.google.com/file/d/1-SaAuxdnOU5oIPTXrHOg6cfgyI8-3lq6/view?usp=sharing" -OutFile ".\_internal\opencv_world490.dll"
      
    - name: Build
      run: |
        cd modules
        python -m nuitka --windows-uac-admin --standalone  --follow-imports --output-filename=update --assume-yes-for-downloads download.py
        cd..
        Copy-Item -Path "$pwd\modules\download.dist\*" -Destination "$pwd\_internal\update\" -Recurse -Force -Confirm:$false
        echo Yes | python -m nuitka --windows-icon-from-ico=./_internal/UmaKey.ico --windows-disable-console --windows-uac-admin --standalone --include-data-dir=_internal/=_internal --include-data-files=_internal/*.dll=_internal/ --include-data-files=_internal/update/*.dll=_internal/update/ --include-data-files=_internal/update/*.pyd=_internal/update/ --follow-imports --output-filename=UmaKey --enable-plugin=tk-inter --assume-yes-for-downloads main.py
    
    - name: Package the build
      run: |
        Compress-Archive -Path ".\main.dist\*" -DestinationPath "UmaKey.zip"
        
    - name: Extract version number
      id: extract_version
      run: |
        $version = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest" | Select-Object -ExpandProperty tag_name)
        $tags = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/tags" -Headers @{"Authorization" = "token ${{ secrets.TOKEN }}"} | ForEach-Object { $_.name })
        Write-Output 'Latest tag: $version'
        Write-Output "version=$version" >> $env:GITHUB_OUTPUT
        Write-Output "tags=$tags" >> $env:GITHUB_OUTPUT

    - name: Increment version number
      id: increment_version
      run: |
        $version = "${{ steps.extract_version.outputs.version }}"
        $major, $minor, $patch = $version.Replace('v', '').Split(".")
        $next_patch = [int]$patch + 1
        $next_version = "v$major.$minor.$next_patch"
        $exist = "${{ steps.extract_version.outputs.tags }}" -split ' ' -contains $next_version
        echo "Next tag: $next_version"
        Write-Output "next_version=$next_version" >> $env:GITHUB_OUTPUT
        Write-Output "exist=$exist" >> $env:GITHUB_OUTPUT
        
    - name: Create Release
      if: ${{ ! steps.increment_version.outputs.exist }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: "${{ steps.increment_version.outputs.next_version }}"
        release_name: "UmaKey ${{ steps.increment_version.outputs.next_version }}"
        draft: false
        prerelease: true

    - name: Get existing Release
      id: get_release
      if: ${{ steps.increment_version.outputs.exist }}
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.TOKEN }}
        script: |
          const upload_url = `https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.increment_version.outputs.next_version }}`;
          console.log(`upload_url=${upload_url}`);
          process.env['upload_url'] = upload_url;
        
    - name: Update Release Asset
      id: update-release-asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      if: ${{ steps.increment_version.outputs.exist }}
      with:
        tag_name: ${{ steps.increment_version.outputs.next_version }}
        files: |
          ./UmaKey.zip
    
    - name: Upload Release Asset
      id: upload-release-asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      if: ${{ ! steps.increment_version.outputs.exist }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./UmaKey.zip
        asset_name: UmaKey.zip
        asset_content_type: application/octet-stream
